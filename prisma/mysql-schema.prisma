// This is your Prisma schema file for MySQL,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/mysql-client"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_DATABASE_URL")
}

// Modelos para MySQL
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relacionamento com carteiras
  portfolios Portfolio[]

  @@map("users")
}

model Product {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Decimal
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("products")
}

model Portfolio {
  id        String   @id @default(cuid())
  name      String   // Nome da carteira (ex: "TV Carteira 1", "Rádio Carteira 2")
  vehicle   String   // "TV", "RADIO", "INTERNET"
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relacionamento com usuário
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Relacionamento com clientes
  clients   Client[]
  
  // Relacionamento com metas
  goals     Goal[]

  @@map("portfolios")
}

model Client {
  id          String   @id @default(cuid())
  name        String
  email       String
  phone       String?
  company     String?
  address     String?
  city        String?
  state       String?
  zipCode     String?
  portfolioId String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relacionamento com carteira
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  
  // Relacionamento com metas
  goals       Goal[]

  @@map("clients")
}

model Goal {
  id          String   @id @default(cuid())
  clientId    String?
  portfolioId String?
  month       Int      // 1-12 para representar os meses
  year        Int
  amount      Decimal  @default(0) // Meta para este cliente/carteira específica
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relacionamento com cliente (opcional para metas individuais)
  client      Client?   @relation(fields: [clientId], references: [id], onDelete: Cascade)
  
  // Relacionamento com carteira (para metas totais da carteira)
  portfolio   Portfolio? @relation(fields: [portfolioId], references: [id], onDelete: Cascade)
  
  // Índice único para evitar duplicatas
  @@unique([clientId, month, year])
  @@unique([portfolioId, month, year])
  @@map("goals")
}